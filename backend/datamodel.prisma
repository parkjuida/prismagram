type User {
  id: ID! @id
  avatar: String
  firstName: String @default(value: "")
  lastName: String
  username: String! @unique
  email: String! @unique
  bio: String
  posts: [Post!]! @relation(name:"PostsOfUser", onDelete:CASCADE)
  likes: [Like!]! @relation(name:"LikesOfUser", onDelete:CASCADE)
  comments: [Comment!]! @relation(name:"CommentsOfUser", onDelete:CASCADE)
  followers: [User!]! @relation(name: "FollowRelation")
  following: [User!]! @relation(name: "FollowRelation")
  rooms: [Room!]! 
  loginSecret: String
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type Post {
  id: ID! @id
  user: User! @relation(name:"PostsOfUser")
  files: [File!]! @relation(name: "FilesOfPost", onDelete:CASCADE)
  location: String
  caption: String!
  likes: [Like!]! @relation(name: "LikesOfPost", onDelete:CASCADE)
  comments: [Comment!]! @relation(name: "CommentOfPost", onDelete:CASCADE)
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type Like {
  id: ID! @id
  user: User @relation(name:"LikesOfUser")
  post: Post @relation(name: "LikesOfPost")
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type Comment {
  id: ID! @id
  text: String!
  user: User @relation(name: "CommentsOfUser")
  post: Post @relation(name: "CommentOfPost")
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type File {
  id: ID! @id
  url: String!
  post: Post @relation(name: "FilesOfPost")
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type Room {
  id: ID! @id
  participants: [User!]! 
  messages: [Message!]! @relation(name: "RoomToMessage", onDelete: CASCADE)
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type Message {
  id: ID! @id
  text: String!
  from: User! @relation(name: "From")
  to: User! @relation(name: "To")
  room: Room! @relation(name: "RoomToMessage")
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

